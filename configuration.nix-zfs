# gentoober Fri Oct 20 09:30:51 AM -03 2023 

{ pkgs, pkgs-unstable, inputs, ... }:
let inherit (inputs) self;
in {
  # Enable NetworkManager for wireless networking,
  # You can configure networking with "nmtui" command.
  #networking.useDHCP = false;
  networking.networkmanager.enable = true;

  users.users = {
      root.initialHashedPassword = "$6$b469/T7KaeuzAHkz$drMXF4vF6YBhO/EyRICukiiTgDXfB67Uj2cZ8jUp9LzOADOyxCXdeNO66DeSq.deKoX1D4yu6g9HFl7DkGZ1R0";
#     openssh.authorizedKeys.keys = [ "sshKey_placeholder" ];
    gentoober = {
      isNormalUser = true;
       extraGroups = [ "wheel" "networkmanager" "docker" ];
       initialPassword = "passwd236";
       packages = with pkgs; [ dmenu dwmblocks nitrogen librewolf firefox brave pass nitrogen obs-studio kdenlive audacity firefox brave telegram-desktop mpv yt-dlp ];
    };
  };

  ## Xserver
  services.xserver.enable = true;
  # enable the GNOME Desktop Environment.
  services.xserver.displayManager.gdm.enable = true;
  services.xserver.desktopManager.gnome.enable = true;
  #environment.gnome.excludePackages = [ pkgs.gnome.cheese pkgs.gnome.gnome-music pkgs.gnome-photos pkgs.gnome.geary pkgs.epiphany pkgs.gnome.gnome-characters pkgs.gnome.totem pkgs.gnome.tali pkgs.gnome.iagno pkgs.gnome.hitori pkgs.gnome.atomix pkgs.gnome-tour ];
  environment.gnome.excludePackages = (with pkgs; [ gnome-photos gnome-tour ]) ++ (with pkgs.gnome; [
	  cheese # webcam tool
	  gnome-music
	  gnome-terminal
	  epiphany # web browser
	  geary # email reader
	  gnome-characters
	  totem # video player
	  tali # poker game
	  iagno # go game
	  hitori # sudoku game
	  atomix # puzzle game
	]);

  # DWM configuration:
  services.xserver.windowManager.dwm.enable = true;
  services.xserver.windowManager.dwm.package = pkgs.dwm.overrideAttrs {
    src = /home/gentoober/.config/suckless/dwm;
  };
  
  # configure keymap in X11
  services.xserver.layout = "br";
  services.xserver.xkbOptions = "eurosign:e,caps:escape";

  # enable touchpad support (enabled default in most desktopManager).
  services.xserver.libinput.enable = true;

  # time zone.
  time.timeZone = "America/Sao_Paulo";

  ## enable ZFS auto snapshot on datasets
  ## You need to set the auto snapshot property to "true"
  ## on datasets for this to work, such as
  # zfs set com.sun:auto-snapshot=true rpool/nixos/home
  services.zfs = {
    autoSnapshot = {
      enable = false;
      flags = "-k -p --utc";
      monthly = 48;
    };
  };

#  services.openssh = {
#    enable = true;
#    settings = { PasswordAuthentication = false; };
#  };

  boot.zfs.forceImportRoot = false;

  nix.settings.experimental-features = [ "nix-command" "flakes" ];

  programs.git.enable = true;
  
  # security
  security = {
   doas.enable = true;
   sudo.enable = false;
   doas.extraConfig = ''
    permit nopass gentoober as root
   '';
  };

  # daemons & misc configs
  services.openssh.enable = false;
  services.flatpak.enable = true;
  virtualisation.docker.enable = true;
  networking.firewall.enable = true;
  nixpkgs.config.allowBroken = true;
  nixpkgs.config.allowUnfree = true;
  
  # system packages (all users)
  environment.systemPackages = builtins.attrValues {
    inherit (pkgs)
      coreutils
      neofetch
      procps
      git
      vim 
      exa
      wget
      curl
      dig
      mtr
      nettools
      iproute2
      traceroute
      tcpdump
      tor
      tree
      cargo
      docker
      dstat
      highlight
      parted
      zip
      lrzip
      lz4
      lzo
      zstd
      light
      redshift
      pavucontrol
      timer
      binwalk
      clamav
      htop
      gotop
      jq
      gnupg
      pinentry
      wl-clipboard
    ;

    # By default, the system will only use packages from the
    # stable channel. i.e.
    # inherit (pkg) my-favorite-stable-package;
    # You can selectively install packages
    # from the unstable channel. Such as
    # inherit (pkgs-unstable) my-favorite-unstable-package;
    # You can also add more
    # channels to pin package version.
  };

  # Safety mechanism: refuse to build unless everything is
  # tracked by git
  system.configurationRevision = if (self ? rev) then
    self.rev
  else
    throw "refuse to build: git tree is dirty";

  system.stateVersion = "23.05";

  # let nix commands follow system nixpkgs revision
  nix.registry.nixpkgs.flake = inputs.nixpkgs;
  # you can then test any package in a nix shell, such as
  # $ nix shell nixpkgs#neovim
  
  # ClamAV - gentoober's Edition

  security.sudo.extraConfig  =
  ''
     clamav ALL = (ALL) NOPASSWD: SETENV: /run/current-system/sw/bin/notify-send
  '';
  #clamav
  services.clamav.updater.enable = true;
  services.clamav.daemon.enable = true;
  services.clamav.daemon.settings = {
    OnAccessMountPath = "/home/gentoober/";
    OnAccessPrevention = false;
    OnAccessExtraScanning = true;
    OnAccessExcludeUname =  "clamav";
    VirusEvent = "/etc/clamav/virus-event.bash";
    User = "clamav";
  };
   # NO swap
   swapDevices = [];
}
